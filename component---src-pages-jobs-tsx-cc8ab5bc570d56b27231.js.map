{"version":3,"sources":["webpack:///./src/pages/jobs.tsx"],"names":["useState","jobs","setJobs","isLoading","setIsLoading","useEffect","getData","sheetId","o","forEach","e","title","entries","map","j","i","key","companyname","address","emailaddress","jobdescription","dentonchamberofcommercemember","jobtitle","phonenumber","typeofwork","websiteurl","href","renderJob","fromEntries"],"mappings":"2PA+Be,qBAAM,MACKA,mBAAe,IAAhCC,EADY,KACNC,EADM,OAEeF,oBAAS,GAApCG,EAFY,KAEDC,EAFC,KAkBnB,OAdAC,qBAAU,WACRD,GAAa,GAEbE,YAAQC,KAAS,SAAAC,GACfA,EAAEC,SAAQ,SAAAC,GACQ,SAAZA,EAAEC,OACJT,EAAQQ,EAAEE,YAIdR,GAAa,QAEd,IAGD,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACGD,EACC,YAAC,IAAD,MAEAF,EAAKY,KAAI,SAACC,EAAGC,GAAJ,OA9CH,SAACD,EAAQE,GAAT,OAChB,mBAAKA,IAAKA,GACR,gCAAYF,EAAEG,aACd,mCAAeH,EAAEI,SACjB,iCAAaJ,EAAEK,cACf,uCAAmBL,EAAEM,gBACpBN,EAAEO,+BAAiC,qCACpC,qCAAiBP,EAAEQ,UACnB,iCAAaR,EAAES,YAAcT,EAAES,YAAc,kDAE7C,wCAAoBT,EAAEU,YACrBV,EAAEW,YACD,mCACW,iBAAGC,KAAMZ,EAAEW,YAAaX,EAAEW,aAGvC,uBACA,wBA6B2BE,CAAUC,YAAYd,GAAoBC","file":"component---src-pages-jobs-tsx-cc8ab5bc570d56b27231.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\nimport { sheetId } from '../constants'\nimport { getData } from '../getSheets'\nimport { fromEntries } from '../utils'\nimport { Loader } from '../components/Loader'\n\nconst renderJob = (j: Job, key: number) => (\n  <div key={key}>\n    <div>Name: {j.companyname}</div>\n    <div>Address: {j.address}</div>\n    <div>Email: {j.emailaddress}</div>\n    <div>Description: {j.jobdescription}</div>\n    {j.dentonchamberofcommercemember && <div>Chamber: ✅</div>}\n    <div>Job Title: {j.jobtitle}</div>\n    <div>Phone: {j.phonenumber ? j.phonenumber : <>No ☎️ Provided!</>}</div>\n    {/* <div>timestamp: {j.timestamp}</div> */}\n    <div>Type of Work: {j.typeofwork}</div>\n    {j.websiteurl && (\n      <div>\n        Website: <a href={j.websiteurl}>{j.websiteurl}</a>\n      </div>\n    )}\n    <br />\n    <br />\n  </div>\n)\n\nexport default () => {\n  const [jobs, setJobs] = useState<Jobs>([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    setIsLoading(true)\n\n    getData(sheetId, o => {\n      o.forEach(e => {\n        if (e.title === 'jobs') {\n          setJobs(e.entries)\n        }\n      })\n\n      setIsLoading(false)\n    })\n  }, [])\n\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            jobs.map((j, i) => renderJob(fromEntries(j as never) as Job, i))\n          )}\n        </Container>\n      </Page>\n    </IndexLayout>\n  )\n}\n\ntype Job = {\n  id: string\n  timestamp: string\n  companyname: string\n  address: string\n  websiteurl: string\n  dentonchamberofcommercemember: string\n  emailaddress: string\n  phonenumber: string\n  jobtitle: string\n  jobdescription: string\n  typeofwork: string\n}\n\ntype Jobs = Array<Array<[string, string]>>\n"],"sourceRoot":""}